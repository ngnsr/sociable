name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  testssh:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH to EC2 instance and Deploy Docker Container
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: whoami

#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Substitute github secrets
#        run: |
#          sed -i 's/<DB_USER>/${{ secrets.DB_USER }}/' src/main/resources/application.yml
#          sed -i 's/<DB_USER>/${{ secrets.DB_USER }}/' compose.yml
#          sed -i 's/<DB_PASSWORD>/${{ secrets.DB_PASSWORD }}/' src/main/resources/application.yml
#          sed -i 's/<DB_PASSWORD>/${{ secrets.DB_PASSWORD }}/' compose.yml
#          sed -i 's/<DB_PASSWORD>/${{ secrets.DB_ADMIN_PASSWORD }}/' compose.yml
#          sed -i 's/<GOOGLE_CLIENT_ID>/${{ secrets.GOOGLE_CLIENT_ID }}/' src/main/resources/application.yml
#          sed -i 's/<GOOGLE_CLIENT_SECRET>/${{ secrets.GOOGLE_CLIENT_SECRET }}/' src/main/resources/application.yml
#
#          sed -i 's/<DOCKER_HUB_USERNAME>/${{ secrets.DOCKER_HUB_USERNAME }}/' compose.yml
#
#      - name: Log in to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Build and push backend Docker image
#        run: |
#          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest .
#          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest
#
#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Copy docker-compose and .env to server
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          port: 22
#          source: "./compose.yml"
##          target: "/home/admin/.deploy/${{ github.event.repository.name }}/"
#          target: "/home/admin/.deploy/"
#
#      - name: Deploy to Server via SSH
#        uses: appleboy/ssh-action@v0.1.4
#        env:
#          APPTOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#          USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          port: 22
#          script: |
#            echo $APPTOKEN | docker login -u $USERNAME --password-stdin
#            cd ~/.deploy/${{ github.event.repository.name }}
#            docker compose -f ./compose.yml pull
#            docker compose -f ./compose.yml up -d
#            docker image prune
