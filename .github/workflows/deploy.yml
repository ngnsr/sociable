name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Substitute github secrets
#        slashes brake sed, use %
        run: |
          sed -i -e 's%<EC2_HOST>%${{ secrets.EC2_HOST }}%g' \
            -e 's/<DB_USER>/${{ secrets.DB_USER }}/g' \
            -e 's/<DB_PASSWORD>/${{ secrets.DB_PASSWORD }}/g' \
            -e 's/<GOOGLE_CLIENT_ID>/${{ secrets.GOOGLE_CLIENT_ID }}/g' \
            -e 's/<GOOGLE_CLIENT_SECRET>/${{ secrets.GOOGLE_CLIENT_SECRET }}/g' \
          src/main/resources/application.yml

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Substitute github secrets
        run: |
          sed -i -e 's/<DB_USER>/${{ secrets.DB_USER }}/g' \
            -e 's/<DB_PASSWORD>/${{ secrets.DB_PASSWORD }}/g' \
            -e 's/<DB_ADMIN_PASSWORD>/${{ secrets.DB_ADMIN_PASSWORD }}/g' \
            -e 's/<DOCKER_HUB_USERNAME>/${{ secrets.DOCKER_HUB_USERNAME }}/g' \
          compose.yml

      - name: Copy docker-compose to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "compose.yml"
          target: "~/.deploy/${{ github.event.repository.name }}/"

      - name: SSH to EC2 instance and Deploy Docker Container
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
            cd ~/.deploy/${{ github.event.repository.name }}
            docker compose -f ./compose.yml pull
            docker compose -f ./compose.yml up -d
            docker image prune